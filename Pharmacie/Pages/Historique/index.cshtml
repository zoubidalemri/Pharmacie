@page
@model Pharmacie.Pages.Ventes.venteModel
<div class="bg-light py-3">
    <div class="container">
        <div class="row">
            <div class="col-md-12 mb-0"><a href="index.html">Acceuil</a> <span class="mx-2 mb-0">/</span> <strong class="text-black">Historique</strong></div>
        </div>
    </div>
</div>
<h2> Historique</h2>

<hr />
<!-- Search Form -->
<form method="get">


    <!-- Dropdown for medications -->
    <div class="form-group">
        <label for="medicamentId">Medicament</label>
        <select id="medicamentId" name="medicamentId" class="form-control">
            <option value="">-- Select a Medicament --</option>
            @foreach (var medicament in Model.Medications)
            {
                <option value="@medicament.Id">@medicament.Nom</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="venteDate">Vente Date</label>
        <input type="date" id="venteDate" name="venteDate" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Search</button>
</form>


<!-- Table for Viewing Sales -->
<table class="table table-bordered">
    <thead>
        <tr>
            <th>ID</th>
            <th>Date</th>
            <th>Médicament</th>
            <th>Quantité Vendue</th>
            <th>Montant</th>
            <th>Gain</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Ventes.Any())
        {
            @foreach (var vente in Model.Ventes)
            {
                <tr>
                    <td>@vente.Id</td>
                    <td>@vente.Date.ToString("yyyy-MM-dd")</td>
                    <td>@vente.Medicament?.Nom</td>
                    <td>@vente.QuantiteVendu</td>
                    <td>@vente.Montant</td>
                    <td>@vente.Gain</td>
                    <td>
                        <button type="button" class="btn btn-warning"
                                onclick="showEditForm(@vente.Id, '@vente.Date.ToString("yyyy-MM-dd")', '@vente.MedicamentId', @vente.QuantiteVendu, @vente.Montant)">
                            Modifier
                        </button>
                        <form method="post" asp-page-handler="Delete" asp-route-id="@vente.Id" style="display:inline;">
                            <button type="submit" class="btn btn-danger" onclick="return confirm('Êtes-vous sûr de vouloir supprimer cette vente ?')">Supprimer</button>
                        </form>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7">Aucune vente disponible.</td>
            </tr>
        }
    </tbody>
</table>
@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger">
        @Model.ErrorMessage
    </div>
}
<!-- Formulaire de modification -->
<div id="editForm" style="display:none; margin-top:20px;">
    <h3>Modifier la vente</h3>
    <form method="post" asp-page-handler="Modifier">
        <input type="hidden" id="editId" name="Id" />
        <input type="hidden" id="editPrixBr" name="PrixBr" />

        <div class="form-group">
            <label for="editDate">Date</label>
            <input type="date" id="editDate" name="Date" class="form-control" />
        </div>
        <div class="form-group">
            <label for="editMedicament">Médicament</label>
            <select id="editMedicament" name="MedicamentId" class="form-control">
                @foreach (var medicament in Model.Medications)
                {
                    <option value="@medicament.Id" data-prixbr="@medicament.PrixBr">@medicament.Nom</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="editQuantite">Quantité Vendue</label>
            <input type="number" id="editQuantite" name="QuantiteVendu" class="form-control" />
        </div>
        <div class="form-group">
            <label for="editMontant">Montant</label>
            <input type="number" id="editMontant" name="Montant" class="form-control" readonly />
        </div>
        <button type="submit" class="btn btn-success">Enregistrer</button>
        <button type="button" class="btn btn-secondary" onclick="hideEditForm()">Annuler</button>
    </form>
</div>

<script>
    function showEditForm(id, date, medicamentId, quantiteVendu, montant) {
        console.log('Date reçue:', date); // Debug: Affichez la date reçue
        document.getElementById('editId').value = id;

        // If the date passed is not in the correct format, convert it to ISO format
        const isoDate = formatDateToISO(date);
        console.log('Date formatée:', isoDate); // Debug: Vérifiez la date après conversion
        document.getElementById('editDate').value = isoDate;  // Assign to input field

        document.getElementById('editMedicament').value = medicamentId;
        document.getElementById('editQuantite').value = quantiteVendu;
        document.getElementById('editMontant').value = montant;

        // Set the PrixBr value based on selected medicament
        const prixBr = getSelectedMedicamentPrixBr();
        document.getElementById('editPrixBr').value = prixBr;

        // Show the edit form
        document.getElementById('editForm').style.display = 'block';
        window.scrollTo(0, document.getElementById('editForm').offsetTop);
    }

    function hideEditForm() {
        document.getElementById('editForm').style.display = 'none';
    }

    function recalculateMontant() {
        const quantiteInput = document.getElementById('editQuantite');
        const montantInput = document.getElementById('editMontant');
        const prixBr = parseFloat(document.getElementById('editPrixBr').value);
        const quantite = parseFloat(quantiteInput.value);

        if (!isNaN(prixBr) && !isNaN(quantite)) {
            montantInput.value = (prixBr * quantite); // Calculate and display montant with 2 decimals
        } else {
            montantInput.value = ''; // Clear montant if input is invalid
        }
    }

    function getSelectedMedicamentPrixBr() {
        const select = document.getElementById('editMedicament');
        const selectedOption = select.options[select.selectedIndex];
        return parseFloat(selectedOption.getAttribute('data-prixbr')) || 0; // Return 0 if not defined
    }

    // Recalculate montant when medicament or quantity changes
    document.getElementById('editMedicament').addEventListener('change', function () {
        const prixBr = getSelectedMedicamentPrixBr();
        document.getElementById('editPrixBr').value = prixBr;
        recalculateMontant(); // Recalculate montant when medicament is changed
    });

    document.getElementById('editQuantite').addEventListener('input', recalculateMontant);

    // Function to convert a date in 'dd/MM/yyyy' format to ISO format 'yyyy-MM-dd'
    function formatDateToISO(dateString) {
        if (!dateString) return ''; // Return empty string if no date is provided
        const parts = dateString.split('-'); // We use split here because it's in 'yyyy-MM-dd'
        return parts[0] + '-' + parts[1] + '-' + parts[2]; // Return the date in ISO format (yyyy-MM-dd)
    }
</script>