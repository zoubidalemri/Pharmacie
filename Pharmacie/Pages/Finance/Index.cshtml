@page
@model Pharmacie.Pages.Finance.IndexfModel

@{
    ViewData["Title"] = "Statistiques des Ventes";
}

<h1>Statistiques des Ventes</h1>

<div>
    <a asp-page="/Finance/Historique" class="btn btn-primary">Voir l'Historique des Ventes</a>
</div>

<!-- Formulaire pour sélectionner le type de statistique -->
<form method="post">
    <div>
        <label>
            <input type="radio" name="TypeStatistique" value="mois" checked="checked" />
            Par mois
        </label>
        <label>
            <input type="radio" name="TypeStatistique" value="annee" />
            Par année
        </label>
    </div>

    <div id="monthSelection" style="display: block;">
        <label for="MoisAnnee">Mois/Année :</label>
        <input type="text" id="MoisAnnee" name="MoisAnnee" placeholder="MM/yyyy" />
    </div>

    <div id="yearSelection" style="display: none;">
        <label for="Annee">Année :</label>
        <input type="number" id="Annee" name="Annee" min="2000" max="2100" />
    </div>

    <button type="submit" class="btn btn-primary">Afficher les statistiques</button>
</form>

<hr />

<!-- Totaux des ventes -->
<div>
    <h2>Total des ventes : @Model.TotalVentes Dhs</h2>
    <h2>Gains totaux : @Model.TotalGains Dhs</h2>
</div>

<!-- Tableau des ventes -->
<table class="table">
    <thead>
        <tr>
            <th>Période</th>
            <th>Montant</th>
            <th>Gain</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var vente in Model.VentesParMois)
        {
            <tr>
                <td>@vente.Mois</td>
                <td>@vente.Montant</td>
                <td>@vente.Gain</td>
            </tr>
        }
    </tbody>
</table>

<!-- Graphique des ventes -->
<canvas id="salesChart" width="400" height="200"></canvas>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.querySelectorAll("input[name='TypeStatistique']").forEach(radio => {
        radio.addEventListener('change', function () {
            document.getElementById('monthSelection').style.display = this.value === 'mois' ? 'block' : 'none';
            document.getElementById('yearSelection').style.display = this.value === 'annee' ? 'block' : 'none';
        });
    });

    var ventesParMois = @Html.Raw(Json.Serialize(Model.VentesParMois));

    if (ventesParMois.length > 0) {
        var ctx = document.getElementById('salesChart').getContext('2d');
        var salesChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ventesParMois.map(v => v.Mois),
                datasets: [{
                    label: 'Ventes Totales',
                    data: ventesParMois.map(v => v.Montant),
                    backgroundColor: 'rgba(75, 192, 192, 0.5)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }, {
                    label: 'Gains Totaux',
                    data: ventesParMois.map(v => v.Gain),
                    backgroundColor: 'rgba(255, 99, 132, 0.5)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function(tooltipItem) {
                                return tooltipItem.dataset.label + ': ' + tooltipItem.raw + ' Dhs';
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    } else {
        var ctx = document.getElementById('salesChart').getContext('2d');
        ctx.font = "16px Arial";
        ctx.fillText("Aucune donnée pour afficher le graphique.", 50, 100);
    }
</script>
