@page
@model Pharmacie.Pages.Ventes.venteModel

<h2> Ventes</h2>

<hr />
<!-- Search Form -->
<div id="addForm" style="margin-top:20px;">
    <h3>Ajouter une vente</h3>
    <form method="post" asp-page-handler="Ajouter">
        <input type="hidden" id="addPrixBr" name="PrixBr" />

        <div class="form-group">
            <label for="addDate">Date</label>
            <input type="date" id="addDate" name="Date" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
        </div>

        <div class="form-group">
            <label for="addMedicament">Médicament</label>
            <select id="addMedicament" name="MedicamentId" class="form-control" required>
                <option value="" disabled selected>-- Sélectionnez un médicament --</option>
                @foreach (var medicament in Model.Medications)
                {
                    <option value="@medicament.Id" data-prixbr="@medicament.PrixBr">@medicament.Nom</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="addQuantite">Quantité Vendue</label>
            <input type="number" id="addQuantite" name="QuantiteVendu" class="form-control" min="1" required />
        </div>

        <div class="form-group">
            <label for="addMontant">Montant</label>
            <input type="number" id="addMontant" name="Montant" class="form-control" readonly />
        </div>

        <button type="submit" class="btn btn-success">Ajouter</button>
    </form>
</div>

<!-- Error Message -->
@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger">
        @Model.ErrorMessage
    </div>
}


<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Recalculate the Montant based on selected medication and quantity
        function recalculateMontant() {
            const quantiteInput = document.getElementById('addQuantite');
            const montantInput = document.getElementById('addMontant');
            const prixBr = parseFloat(document.getElementById('addPrixBr').value) || 0;
            const quantite = parseFloat(quantiteInput.value) || 0;

            montantInput.value = (prixBr * quantite).toFixed(2);
        }

        // Get the PrixBr for the selected medication
        function getSelectedMedicamentPrixBr() {
            const select = document.getElementById('addMedicament');
            const selectedOption = select.options[select.selectedIndex];
            return parseFloat(selectedOption?.getAttribute('data-prixbr')) || 0;
        }

        // Attach event listeners for dynamic updates
        document.getElementById('addMedicament').addEventListener('change', function () {
            const prixBr = getSelectedMedicamentPrixBr();
            document.getElementById('addPrixBr').value = prixBr;
            recalculateMontant();
        });

        document.getElementById('addQuantite').addEventListener('input', recalculateMontant);
    });
</script>

